<!DOCTYPE html>
<html>
<head>
  <title>EgoSearcher</title>
  <meta name="author" content="d4i"/>
  <link rel="stylesheet" type="text/css" href="/css/bootstrap.min.css">
</head>
<body>
<div class="navbar navbar-inverse">
  <div class="container">
    <a class="navbar-brand" href="/">EgoSearcher</a>
  </div>
</div>

<div class="container">
  <form method="post" action="/analysis">
    <div class="form-group">
      <label for="twitter_id">twitter_id</label>
      <input type="text" class="form-control" id="id" name="id" placeholder="Enter twitter id">
    </div>
    <button type="submit" class="btn btn-default">Analyze!!</button>
  </form>
</div>

<div class="container">
  <svg></svg>
  <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
  <script src="https://rawgithub.com/jasondavies/d3-cloud/master/d3.layout.cloud.js"></script>
  <script>
      d3.select('svg').append('text')
              .attr({
                  x: 50,
                  y: 50,
                  fill: "black",
                  "font-size": 40
              })
              .text('Loading...')

      d3.csv('test.csv', function (data) {
          data = data.splice(0, 1200)
          console.log(data)
          var words = data.map(function (d) {
              return {
                  text: d.word
              }
          });
          console.log(words)
      });

      d3.csv('test.csv', function (data) {
          var h = 800;
          var w = 800;
          data = data.splice(0, 1200); //処理wordを1200件に絞る

          var random = d3.random.irwinHall(2)

          var countMax = d3.max(data, function (d) {
              return d.count
          });
          var sizeScale = d3.scale.linear().domain([0, countMax]).range([10, 100])
          var colorScale = d3.scale.category20();

          var words = data.map(function (d) {
              return {
                  text: d.word,
                  size: sizeScale(d.count) //頻出カウントを文字サイズに反映
              };
          });

          d3.layout.cloud().size([w, h])
                  .words(words)
                  .rotate(function () {
                      return Math.round(1 - random()) * 90;
                  }) //ランダムに文字を90度回転
                  .font("Impact")
                  .fontSize(function (d) {
                      return d.size;
                  })
                  .on("end", draw) //描画関数の読み込み
                  .start();

          //wordcloud 描画
          function draw(words) {
              d3.selectAll('text').remove();
              d3.select("svg")
                      .attr({
                          "width": w,
                          "height": h
                      })
                      .append("g")
                      .attr("transform", "translate(150,150)")
                      .selectAll("text")
                      .data(words)
                      .enter().append("text")
                      .style({
                          "font-family": "Impact",
                          "font-size": function (d) {
                              return d.size + "px";
                          },
                          "fill": function (d, i) {
                              return colorScale(i);
                          }
                      })
                      .attr({
                          "text-anchor": "middle",
                          "transform": function (d) {
                              return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
                          }
                      })
                      .text(function (d) {
                          return d.text;
                      });
          }

      });
  </script>

  <% unless @keywords.nil? %>
      <ul>
        <% @keywords.each do |keyword| %>
            <li>
              <%= keyword %>
            </li>
        <% end %>
      </ul>
  <% end %>
</div>
</body>
</html>
